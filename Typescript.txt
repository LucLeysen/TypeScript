* Typescript fundamentals *
---------------------------

Typed superset of JavaScript       =>   typescriptlang.org

=>  any browser
    any host
    any os
    open source
    Tool support

=>  static typing
    encapsulation
    classes
    modules
    interfaces
    lambdas
    intellisense and syntax checking

Compiler

typescript (.ts file) => tsc => JavaScript

--- Keywords ---
* class
* constructor
* exports
* extends
* implements
* imports
* interface
* module / namespace = container
* public / private
* ...   = Rest parameter syntax
* => = Arrow syntax used by definitions and functions
* <typeName> = <> characters use to cast/convert between types
* : = separator between variable/parameter names and types

typescript plagound: http://www.typescriptlang.org/play/


--- Type Interference ---
var num = 2;  => num is of type number because 2 is a number

--- Type annotation ---
var num: number = 2;

* any = base type of everything

var any1;                       => type is any
var num1: number;               => Type annotation
var num2: number = 2;           => Type annotation setting the value
var num3 = 3;                   => Type Interference (number)
var num4 = num3 + 100;          => Type Interference (number)

var str1 = num1 + 'hi'          => this will work (num1 to string) Type Interference (string)